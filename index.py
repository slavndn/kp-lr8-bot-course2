import os
import json
import requests
import random

import telebot

BOT_TOKEN = os.environ['BOT_TOKEN']

bot = telebot.TeleBot(BOT_TOKEN)

DIALOG = {
    'hello':{
        'in': ['/hello', 'hello', 'hi', '–ü—Ä–∏–≤–µ—Ç', '–ö–∞–∫ —Å–∞–º', 'privet'],
        'out': [
            '‚úåÔ∏è–ü—Ä–∏–≤–µ—Ç, —è kp-lr8-bot! –†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É',
            '‚úåÔ∏è–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.',
            '‚úåÔ∏è–ü—Ä–∏–≤–µ—Ç!'
        ]
    },
    'how are you':{
        'in': ['/howareyou', 'how are you', '–∫–∞–∫ –¥–µ–ª–∞', '–∫–∞–∫ —Ç—ã', '–¥–µ–ª–∞'],
        'out': [
            'üëç–•–æ—Ä–æ—à–æ',
            'üëç–û—Ç–ª–∏—á–Ω–æ',
            'üëçGood. And how are you!'
        ]
    },
    'name':{
        'in': ['/name', 'name', '–∏–º—è', '–∫–∞–∫ –∑–æ–≤—É—Ç', '–∑–æ–≤—É—Ç'],
        'out': [
            '–ú–µ–Ω—è –∑–æ–≤—É—Ç kp-lr8-botüòä',
            '–Ø —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –ø–æ –∏–º–µ–Ω–∏ kp-lr8-botüòä',
            '–Ø kp-lr8-botüòä'
        ]
    },
    'help':{
        'in': ['/help', 'help', '–∏–º–ø–æ–º–æ—â—å', '–ø–æ–º–æ–≥–∏'],
        'out': [
            '–ö–∞–∫ —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?',
            '–°–µ–≥–æ–¥–Ω—è —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ª—É—á—à–µ, —á–µ–º –≤—á–µ—Ä–∞',
            '–ù–µ, —Å–µ–≥–æ–¥–Ω—è —Ç—ã —Å–∞–º..'
        ]
    },
}

def flatten(l):
    return [item for sublist in l for item in sublist]

def handler(event, context):
    body = json.loads(event['body'])

    update = telebot.types.Update.de_json(body)

    bot.process_new_updates([update])

    return {
        'statusCode': 200,
        'body': 'NULL',
    }

@bot.message_handler(commands=['start','help'])
def start_handler(message):
    message_fragments = flatten([message_case['in'] for message_case in DIALOG.values()])
    bot.send_message(message.chat.id, f"–Ø –Ω–µ –ø–æ–Ω—è–ª, –∫–æ–º–∞–Ω–¥—ã: {', '.join(message_fragments)}")

@bot.message_handler(func = lambda message: True)
def simple_chat(message):
    message_text = message.text

    try:
        message_reply = None
        for message_type, message_case in DIALOG.items():
            if any([message_fragment in message_text for message_fragment in message_case['in']]):
                message_reply = random.choice(message_case['out'])
                break
                
        else:
            message_fragments = flatten([message_case['in'] for message_case in DIALOG.values()])
            message_reply = f"–Ø –Ω–µ –ø–æ–Ω—è–ª, –∫–æ–º–∞–Ω–¥—ã: {', '.join(message_fragments)}"

        bot.send_message(message.chat.id, message_reply)

    except BaseException as exception:
        print(f"Exception: {exception}")